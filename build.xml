<project name="SQLiteProvider">
	<property file="local.properties" />
	<property file="build.properties" />
	<property file="default.properties" />

	<import file="${sdk.dir}/platforms/android-8/ant/ant_rules_r2.xml" />
	<path id="android.antlibs">
		<pathelement path="${sdk.dir}/tools/lib/anttasks.jar" />
		<pathelement path="${sdk.dir}/tools/lib/sdklib.jar" />
		<pathelement path="${sdk.dir}/tools/lib/androidprefs.jar" />
		<pathelement path="${sdk.dir}/tools/lib/apkbuilder.jar" />
		<pathelement path="${sdk.dir}/tools/lib/jarutils.jar" />
	</path>
	<taskdef name="setup" classname="com.android.ant.SetupTask" classpathref="android.antlibs" />
	<setup />
	
	<property name="aidl.dir" location="${aidl.dir}" />
	<property name="aidl.absolute.dir" location="${aidl.dir}" />
	<property name="test.absolute.dir" location="${test.dir}" />
	<property name="out.test-classes.dir" value="${out.absolute.dir}/testClasses" />
	<property name="out.test-classes.absolute.dir" value="${out.test-classes.dir}" />
	<property name="test.external.libs.dir" value="tests/libs" />
	<property name="test.external.libs.absolute.dir" location="${test.external.libs.dir}" />
	<property name="publish.dir" location="${out.absolute.dir}/publish" />
	<property name="test.basedir" location="tests" />
	<property environment="env" />
	<condition property="build.number" value="${env.BUILD_NUMBER}" else="unknown">
		<isset property="env.BUILD_NUMBER" />
	</condition>
	
	<exec command="date" outputproperty="build.date" />
	
	<!-- Generates java classes from .aidl files. 
	<target name="-aidl" depends="-dirs">
		<echo>Compiling aidl files into Java classes...</echo>
		<apply executable="${aidl}" failonerror="true">
			<arg value="-p${android.aidl}" />
			<arg value="-I${source.absolute.dir}" />
			<arg value="-o${gen.absolute.dir}" />
			<fileset dir="${aidl.absolute.dir}">
				<include name="**/*.aidl" />
			</fileset>
		</apply>
	</target>
		-->
	<target name="compile.tests" depends="compile" description="compile module source; test classes" unless="skip.tests">
		<mkdir dir="${out.test-classes.absolute.dir}" />
		<javac encoding="ascii" source="1.6" target="1.6" debug="true" extdirs="" destdir="${out.test-classes.absolute.dir}" verbose="${verbose}" classpath="${extensible.classpath}">
			<src path="${test.absolute.dir}" />
			<src path="${robolectric.dir}" />
			<classpath>
				<pathelement path="${out.classes.absolute.dir}" />
				<path refid="android.target.classpath" />
				<fileset dir="${test.external.libs.absolute.dir}" includes="*.jar" />
				<fileset dir="${external.libs.absolute.dir}" includes="*.jar" />
				<fileset dir="${robolectric.dir}/lib/main" includes="*.jar" />
			</classpath>
		</javac>
	</target>
		
	<target name="clean" depends="android_rules.clean" description="cleanup module">
		<delete dir="${out.test-classes.absolute.dir}" />
		<delete dir="${tmp.dir}" />
	</target>
	
	<target name="test" depends="compile.tests" description="test all">
		<mkdir dir="${test.basedir}/out/reports/tests" />
		<junit showoutput="true" failureproperty="junit.failure">
			<formatter type="plain" />
			<formatter type="xml" />
			<batchtest todir="${test.basedir}/out/reports/tests">
				<fileset dir="${test.basedir}/src">
					<include name="**/*LocalTest.java" />
				</fileset>
			</batchtest>
			<classpath>
				<pathelement path="${out.classes.absolute.dir}" />
				<pathelement path="${out.test-classes.absolute.dir}" />
				<fileset dir="${test.external.libs.absolute.dir}" includes="*.jar" />
				<fileset dir="${external.libs.absolute.dir}" includes="*.jar" />
				<fileset dir="${robolectric.dir}/lib/main" includes="*.jar" />
				<path refid="android.target.classpath" />
			</classpath>
		</junit>
		<fail if="junit.failure" message="Unit test(s) failed. See reports!" />
	</target>
	
</project>